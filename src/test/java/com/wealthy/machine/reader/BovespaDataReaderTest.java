package com.wealthy.machine.reader;

import org.junit.jupiter.api.Test;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.util.Set;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class BovespaDataReaderTest {

    private URL getTestingZip() throws IOException {
        var zipFile = File.createTempFile("getTestingZip", ".zip");
        try(
                var fos = new FileOutputStream(zipFile);
                var zos = new ZipOutputStream(fos)
        ){
            var lines = Set.of(
                    //Correct lines
                    "012003021202AMBV3       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV4       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV11      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV3F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV4F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV11F     010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202B3SA3       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    // Incorrect Lines
                    "012003021202AMBV1       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV2       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV5       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV6       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV7       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV8       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV9       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV10      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV1F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV2F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV5F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV6F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV7F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV8F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV9F      010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMBV10F     010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202AMB 1       010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202BA3         010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107",
                    "012003021202B3SA31234   010AMBEV       ON *         R$  000000004310000000000431000000000043100000000004310000000000431000000000043100000000004600000001000000000000210000000000000009051000000000000000009999123100010000000000000000BRAMBVACNOR4107"
            );
            zos.putNextEntry(new ZipEntry("quotes"));
            var concatenatedLines  = String.join(System.lineSeparator(), lines);
            byte[] bytes = concatenatedLines.getBytes();
            zos.write(bytes, 0, bytes.length);
            return zipFile.toURI().toURL();
        } catch (FileNotFoundException e) {
           throw new RuntimeException(e);
        }
    }

    @Test
    public void readDataWithSuccess() throws IOException {
        var reader = new BovespaDataReader();
        var list = reader.read(getTestingZip());
        assertEquals(7, list.size());
    }

    @Test
    public void invalidUrl() {
        final var reader = new BovespaDataReader();
        assertThrows(RuntimeException.class, () -> reader.read(new URL("https://www.uol.com.br/")));
    }

}